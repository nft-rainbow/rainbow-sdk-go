/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// checks if the MiddlewaresUserLoginInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MiddlewaresUserLoginInfo{}

// MiddlewaresUserLoginInfo struct for MiddlewaresUserLoginInfo
type MiddlewaresUserLoginInfo struct {
	Email string `json:"email"`
	Password string `json:"password"`
	AdditionalProperties map[string]interface{}
}

type _MiddlewaresUserLoginInfo MiddlewaresUserLoginInfo

// NewMiddlewaresUserLoginInfo instantiates a new MiddlewaresUserLoginInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMiddlewaresUserLoginInfo(email string, password string) *MiddlewaresUserLoginInfo {
	this := MiddlewaresUserLoginInfo{}
	this.Email = email
	this.Password = password
	return &this
}

// NewMiddlewaresUserLoginInfoWithDefaults instantiates a new MiddlewaresUserLoginInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMiddlewaresUserLoginInfoWithDefaults() *MiddlewaresUserLoginInfo {
	this := MiddlewaresUserLoginInfo{}
	return &this
}

// GetEmail returns the Email field value
func (o *MiddlewaresUserLoginInfo) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *MiddlewaresUserLoginInfo) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *MiddlewaresUserLoginInfo) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *MiddlewaresUserLoginInfo) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *MiddlewaresUserLoginInfo) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *MiddlewaresUserLoginInfo) SetPassword(v string) {
	o.Password = v
}

func (o MiddlewaresUserLoginInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MiddlewaresUserLoginInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MiddlewaresUserLoginInfo) UnmarshalJSON(bytes []byte) (err error) {
	varMiddlewaresUserLoginInfo := _MiddlewaresUserLoginInfo{}

	if err = json.Unmarshal(bytes, &varMiddlewaresUserLoginInfo); err == nil {
		*o = MiddlewaresUserLoginInfo(varMiddlewaresUserLoginInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMiddlewaresUserLoginInfo struct {
	value *MiddlewaresUserLoginInfo
	isSet bool
}

func (v NullableMiddlewaresUserLoginInfo) Get() *MiddlewaresUserLoginInfo {
	return v.value
}

func (v *NullableMiddlewaresUserLoginInfo) Set(val *MiddlewaresUserLoginInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMiddlewaresUserLoginInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMiddlewaresUserLoginInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMiddlewaresUserLoginInfo(val *MiddlewaresUserLoginInfo) *NullableMiddlewaresUserLoginInfo {
	return &NullableMiddlewaresUserLoginInfo{value: val, isSet: true}
}

func (v NullableMiddlewaresUserLoginInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMiddlewaresUserLoginInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


