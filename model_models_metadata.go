/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// ModelsMetadata struct for ModelsMetadata
type ModelsMetadata struct {
	AppId *int32 `json:"app_id,omitempty"`
	Attributes []ModelsMetadataAttribute `json:"attributes,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DeletedAt *GormDeletedAt `json:"deleted_at,omitempty"`
	Description string `json:"description"`
	ExternalLink *string `json:"external_link,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Image string `json:"image"`
	MetadataId *string `json:"metadata_id,omitempty"`
	Name string `json:"name"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Uri *string `json:"uri,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsMetadata ModelsMetadata

// NewModelsMetadata instantiates a new ModelsMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsMetadata(description string, image string, name string) *ModelsMetadata {
	this := ModelsMetadata{}
	this.Description = description
	this.Image = image
	this.Name = name
	return &this
}

// NewModelsMetadataWithDefaults instantiates a new ModelsMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsMetadataWithDefaults() *ModelsMetadata {
	this := ModelsMetadata{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *ModelsMetadata) GetAppId() int32 {
	if o == nil || o.AppId == nil {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetAppIdOk() (*int32, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *ModelsMetadata) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *ModelsMetadata) SetAppId(v int32) {
	o.AppId = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ModelsMetadata) GetAttributes() []ModelsMetadataAttribute {
	if o == nil || o.Attributes == nil {
		var ret []ModelsMetadataAttribute
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetAttributesOk() ([]ModelsMetadataAttribute, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ModelsMetadata) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []ModelsMetadataAttribute and assigns it to the Attributes field.
func (o *ModelsMetadata) SetAttributes(v []ModelsMetadataAttribute) {
	o.Attributes = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsMetadata) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsMetadata) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsMetadata) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ModelsMetadata) GetDeletedAt() GormDeletedAt {
	if o == nil || o.DeletedAt == nil {
		var ret GormDeletedAt
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetDeletedAtOk() (*GormDeletedAt, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ModelsMetadata) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given GormDeletedAt and assigns it to the DeletedAt field.
func (o *ModelsMetadata) SetDeletedAt(v GormDeletedAt) {
	o.DeletedAt = &v
}

// GetDescription returns the Description field value
func (o *ModelsMetadata) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ModelsMetadata) SetDescription(v string) {
	o.Description = v
}

// GetExternalLink returns the ExternalLink field value if set, zero value otherwise.
func (o *ModelsMetadata) GetExternalLink() string {
	if o == nil || o.ExternalLink == nil {
		var ret string
		return ret
	}
	return *o.ExternalLink
}

// GetExternalLinkOk returns a tuple with the ExternalLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetExternalLinkOk() (*string, bool) {
	if o == nil || o.ExternalLink == nil {
		return nil, false
	}
	return o.ExternalLink, true
}

// HasExternalLink returns a boolean if a field has been set.
func (o *ModelsMetadata) HasExternalLink() bool {
	if o != nil && o.ExternalLink != nil {
		return true
	}

	return false
}

// SetExternalLink gets a reference to the given string and assigns it to the ExternalLink field.
func (o *ModelsMetadata) SetExternalLink(v string) {
	o.ExternalLink = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsMetadata) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsMetadata) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsMetadata) SetId(v int32) {
	o.Id = &v
}

// GetImage returns the Image field value
func (o *ModelsMetadata) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *ModelsMetadata) SetImage(v string) {
	o.Image = v
}

// GetMetadataId returns the MetadataId field value if set, zero value otherwise.
func (o *ModelsMetadata) GetMetadataId() string {
	if o == nil || o.MetadataId == nil {
		var ret string
		return ret
	}
	return *o.MetadataId
}

// GetMetadataIdOk returns a tuple with the MetadataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetMetadataIdOk() (*string, bool) {
	if o == nil || o.MetadataId == nil {
		return nil, false
	}
	return o.MetadataId, true
}

// HasMetadataId returns a boolean if a field has been set.
func (o *ModelsMetadata) HasMetadataId() bool {
	if o != nil && o.MetadataId != nil {
		return true
	}

	return false
}

// SetMetadataId gets a reference to the given string and assigns it to the MetadataId field.
func (o *ModelsMetadata) SetMetadataId(v string) {
	o.MetadataId = &v
}

// GetName returns the Name field value
func (o *ModelsMetadata) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ModelsMetadata) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsMetadata) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsMetadata) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsMetadata) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *ModelsMetadata) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadata) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *ModelsMetadata) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *ModelsMetadata) SetUri(v string) {
	o.Uri = &v
}

func (o ModelsMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId != nil {
		toSerialize["app_id"] = o.AppId
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.DeletedAt != nil {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.ExternalLink != nil {
		toSerialize["external_link"] = o.ExternalLink
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["image"] = o.Image
	}
	if o.MetadataId != nil {
		toSerialize["metadata_id"] = o.MetadataId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ModelsMetadata) UnmarshalJSON(bytes []byte) (err error) {
	varModelsMetadata := _ModelsMetadata{}

	if err = json.Unmarshal(bytes, &varModelsMetadata); err == nil {
		*o = ModelsMetadata(varModelsMetadata)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "app_id")
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "description")
		delete(additionalProperties, "external_link")
		delete(additionalProperties, "id")
		delete(additionalProperties, "image")
		delete(additionalProperties, "metadata_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "uri")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsMetadata struct {
	value *ModelsMetadata
	isSet bool
}

func (v NullableModelsMetadata) Get() *ModelsMetadata {
	return v.value
}

func (v *NullableModelsMetadata) Set(val *ModelsMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsMetadata(val *ModelsMetadata) *NullableModelsMetadata {
	return &NullableModelsMetadata{value: val, isSet: true}
}

func (v NullableModelsMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


