/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// ModelsMetadataAttribute struct for ModelsMetadataAttribute
type ModelsMetadataAttribute struct {
	AttributeName *string `json:"attribute_name,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DeletedAt *GormDeletedAt `json:"deleted_at,omitempty"`
	DisplayType *string `json:"display_type,omitempty"`
	Id *int32 `json:"id,omitempty"`
	MetadataId *int32 `json:"metadataId,omitempty"`
	TraitType *string `json:"trait_type,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Value *string `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsMetadataAttribute ModelsMetadataAttribute

// NewModelsMetadataAttribute instantiates a new ModelsMetadataAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsMetadataAttribute() *ModelsMetadataAttribute {
	this := ModelsMetadataAttribute{}
	return &this
}

// NewModelsMetadataAttributeWithDefaults instantiates a new ModelsMetadataAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsMetadataAttributeWithDefaults() *ModelsMetadataAttribute {
	this := ModelsMetadataAttribute{}
	return &this
}

// GetAttributeName returns the AttributeName field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetAttributeName() string {
	if o == nil || o.AttributeName == nil {
		var ret string
		return ret
	}
	return *o.AttributeName
}

// GetAttributeNameOk returns a tuple with the AttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetAttributeNameOk() (*string, bool) {
	if o == nil || o.AttributeName == nil {
		return nil, false
	}
	return o.AttributeName, true
}

// HasAttributeName returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasAttributeName() bool {
	if o != nil && o.AttributeName != nil {
		return true
	}

	return false
}

// SetAttributeName gets a reference to the given string and assigns it to the AttributeName field.
func (o *ModelsMetadataAttribute) SetAttributeName(v string) {
	o.AttributeName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsMetadataAttribute) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetDeletedAt() GormDeletedAt {
	if o == nil || o.DeletedAt == nil {
		var ret GormDeletedAt
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetDeletedAtOk() (*GormDeletedAt, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given GormDeletedAt and assigns it to the DeletedAt field.
func (o *ModelsMetadataAttribute) SetDeletedAt(v GormDeletedAt) {
	o.DeletedAt = &v
}

// GetDisplayType returns the DisplayType field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetDisplayType() string {
	if o == nil || o.DisplayType == nil {
		var ret string
		return ret
	}
	return *o.DisplayType
}

// GetDisplayTypeOk returns a tuple with the DisplayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetDisplayTypeOk() (*string, bool) {
	if o == nil || o.DisplayType == nil {
		return nil, false
	}
	return o.DisplayType, true
}

// HasDisplayType returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasDisplayType() bool {
	if o != nil && o.DisplayType != nil {
		return true
	}

	return false
}

// SetDisplayType gets a reference to the given string and assigns it to the DisplayType field.
func (o *ModelsMetadataAttribute) SetDisplayType(v string) {
	o.DisplayType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsMetadataAttribute) SetId(v int32) {
	o.Id = &v
}

// GetMetadataId returns the MetadataId field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetMetadataId() int32 {
	if o == nil || o.MetadataId == nil {
		var ret int32
		return ret
	}
	return *o.MetadataId
}

// GetMetadataIdOk returns a tuple with the MetadataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetMetadataIdOk() (*int32, bool) {
	if o == nil || o.MetadataId == nil {
		return nil, false
	}
	return o.MetadataId, true
}

// HasMetadataId returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasMetadataId() bool {
	if o != nil && o.MetadataId != nil {
		return true
	}

	return false
}

// SetMetadataId gets a reference to the given int32 and assigns it to the MetadataId field.
func (o *ModelsMetadataAttribute) SetMetadataId(v int32) {
	o.MetadataId = &v
}

// GetTraitType returns the TraitType field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetTraitType() string {
	if o == nil || o.TraitType == nil {
		var ret string
		return ret
	}
	return *o.TraitType
}

// GetTraitTypeOk returns a tuple with the TraitType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetTraitTypeOk() (*string, bool) {
	if o == nil || o.TraitType == nil {
		return nil, false
	}
	return o.TraitType, true
}

// HasTraitType returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasTraitType() bool {
	if o != nil && o.TraitType != nil {
		return true
	}

	return false
}

// SetTraitType gets a reference to the given string and assigns it to the TraitType field.
func (o *ModelsMetadataAttribute) SetTraitType(v string) {
	o.TraitType = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsMetadataAttribute) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ModelsMetadataAttribute) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMetadataAttribute) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ModelsMetadataAttribute) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ModelsMetadataAttribute) SetValue(v string) {
	o.Value = &v
}

func (o ModelsMetadataAttribute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttributeName != nil {
		toSerialize["attribute_name"] = o.AttributeName
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.DeletedAt != nil {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if o.DisplayType != nil {
		toSerialize["display_type"] = o.DisplayType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MetadataId != nil {
		toSerialize["metadataId"] = o.MetadataId
	}
	if o.TraitType != nil {
		toSerialize["trait_type"] = o.TraitType
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ModelsMetadataAttribute) UnmarshalJSON(bytes []byte) (err error) {
	varModelsMetadataAttribute := _ModelsMetadataAttribute{}

	if err = json.Unmarshal(bytes, &varModelsMetadataAttribute); err == nil {
		*o = ModelsMetadataAttribute(varModelsMetadataAttribute)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "attribute_name")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "display_type")
		delete(additionalProperties, "id")
		delete(additionalProperties, "metadataId")
		delete(additionalProperties, "trait_type")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsMetadataAttribute struct {
	value *ModelsMetadataAttribute
	isSet bool
}

func (v NullableModelsMetadataAttribute) Get() *ModelsMetadataAttribute {
	return v.value
}

func (v *NullableModelsMetadataAttribute) Set(val *ModelsMetadataAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsMetadataAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsMetadataAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsMetadataAttribute(val *ModelsMetadataAttribute) *NullableModelsMetadataAttribute {
	return &NullableModelsMetadataAttribute{value: val, isSet: true}
}

func (v NullableModelsMetadataAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsMetadataAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


