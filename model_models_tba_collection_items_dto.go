/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ModelsTBACollectionItemsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTBACollectionItemsDto{}

// ModelsTBACollectionItemsDto struct for ModelsTBACollectionItemsDto
type ModelsTBACollectionItemsDto struct {
	// Addresses of the specified tbas. Will throw an error if the tba is not created yet
	Accounts []string `json:"accounts"`
	AdditionalProperties map[string]interface{}
}

type _ModelsTBACollectionItemsDto ModelsTBACollectionItemsDto

// NewModelsTBACollectionItemsDto instantiates a new ModelsTBACollectionItemsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTBACollectionItemsDto(accounts []string) *ModelsTBACollectionItemsDto {
	this := ModelsTBACollectionItemsDto{}
	this.Accounts = accounts
	return &this
}

// NewModelsTBACollectionItemsDtoWithDefaults instantiates a new ModelsTBACollectionItemsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTBACollectionItemsDtoWithDefaults() *ModelsTBACollectionItemsDto {
	this := ModelsTBACollectionItemsDto{}
	return &this
}

// GetAccounts returns the Accounts field value
func (o *ModelsTBACollectionItemsDto) GetAccounts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *ModelsTBACollectionItemsDto) GetAccountsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Accounts, true
}

// SetAccounts sets field value
func (o *ModelsTBACollectionItemsDto) SetAccounts(v []string) {
	o.Accounts = v
}

func (o ModelsTBACollectionItemsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTBACollectionItemsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accounts"] = o.Accounts

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsTBACollectionItemsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accounts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelsTBACollectionItemsDto := _ModelsTBACollectionItemsDto{}

	err = json.Unmarshal(data, &varModelsTBACollectionItemsDto)

	if err != nil {
		return err
	}

	*o = ModelsTBACollectionItemsDto(varModelsTBACollectionItemsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accounts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsTBACollectionItemsDto struct {
	value *ModelsTBACollectionItemsDto
	isSet bool
}

func (v NullableModelsTBACollectionItemsDto) Get() *ModelsTBACollectionItemsDto {
	return v.value
}

func (v *NullableModelsTBACollectionItemsDto) Set(val *ModelsTBACollectionItemsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTBACollectionItemsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTBACollectionItemsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTBACollectionItemsDto(val *ModelsTBACollectionItemsDto) *NullableModelsTBACollectionItemsDto {
	return &NullableModelsTBACollectionItemsDto{value: val, isSet: true}
}

func (v NullableModelsTBACollectionItemsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTBACollectionItemsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


