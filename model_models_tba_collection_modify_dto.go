/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// checks if the ModelsTBACollectionModifyDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTBACollectionModifyDto{}

// ModelsTBACollectionModifyDto struct for ModelsTBACollectionModifyDto
type ModelsTBACollectionModifyDto struct {
	NewDescription *string `json:"new_description,omitempty"`
	NewName *string `json:"new_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsTBACollectionModifyDto ModelsTBACollectionModifyDto

// NewModelsTBACollectionModifyDto instantiates a new ModelsTBACollectionModifyDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTBACollectionModifyDto() *ModelsTBACollectionModifyDto {
	this := ModelsTBACollectionModifyDto{}
	return &this
}

// NewModelsTBACollectionModifyDtoWithDefaults instantiates a new ModelsTBACollectionModifyDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTBACollectionModifyDtoWithDefaults() *ModelsTBACollectionModifyDto {
	this := ModelsTBACollectionModifyDto{}
	return &this
}

// GetNewDescription returns the NewDescription field value if set, zero value otherwise.
func (o *ModelsTBACollectionModifyDto) GetNewDescription() string {
	if o == nil || IsNil(o.NewDescription) {
		var ret string
		return ret
	}
	return *o.NewDescription
}

// GetNewDescriptionOk returns a tuple with the NewDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACollectionModifyDto) GetNewDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.NewDescription) {
		return nil, false
	}
	return o.NewDescription, true
}

// HasNewDescription returns a boolean if a field has been set.
func (o *ModelsTBACollectionModifyDto) HasNewDescription() bool {
	if o != nil && !IsNil(o.NewDescription) {
		return true
	}

	return false
}

// SetNewDescription gets a reference to the given string and assigns it to the NewDescription field.
func (o *ModelsTBACollectionModifyDto) SetNewDescription(v string) {
	o.NewDescription = &v
}

// GetNewName returns the NewName field value if set, zero value otherwise.
func (o *ModelsTBACollectionModifyDto) GetNewName() string {
	if o == nil || IsNil(o.NewName) {
		var ret string
		return ret
	}
	return *o.NewName
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACollectionModifyDto) GetNewNameOk() (*string, bool) {
	if o == nil || IsNil(o.NewName) {
		return nil, false
	}
	return o.NewName, true
}

// HasNewName returns a boolean if a field has been set.
func (o *ModelsTBACollectionModifyDto) HasNewName() bool {
	if o != nil && !IsNil(o.NewName) {
		return true
	}

	return false
}

// SetNewName gets a reference to the given string and assigns it to the NewName field.
func (o *ModelsTBACollectionModifyDto) SetNewName(v string) {
	o.NewName = &v
}

func (o ModelsTBACollectionModifyDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTBACollectionModifyDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewDescription) {
		toSerialize["new_description"] = o.NewDescription
	}
	if !IsNil(o.NewName) {
		toSerialize["new_name"] = o.NewName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsTBACollectionModifyDto) UnmarshalJSON(data []byte) (err error) {
	varModelsTBACollectionModifyDto := _ModelsTBACollectionModifyDto{}

	err = json.Unmarshal(data, &varModelsTBACollectionModifyDto)

	if err != nil {
		return err
	}

	*o = ModelsTBACollectionModifyDto(varModelsTBACollectionModifyDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "new_description")
		delete(additionalProperties, "new_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsTBACollectionModifyDto struct {
	value *ModelsTBACollectionModifyDto
	isSet bool
}

func (v NullableModelsTBACollectionModifyDto) Get() *ModelsTBACollectionModifyDto {
	return v.value
}

func (v *NullableModelsTBACollectionModifyDto) Set(val *ModelsTBACollectionModifyDto) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTBACollectionModifyDto) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTBACollectionModifyDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTBACollectionModifyDto(val *ModelsTBACollectionModifyDto) *NullableModelsTBACollectionModifyDto {
	return &NullableModelsTBACollectionModifyDto{value: val, isSet: true}
}

func (v NullableModelsTBACollectionModifyDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTBACollectionModifyDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


