/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// checks if the ModelsTBACreationTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTBACreationTask{}

// ModelsTBACreationTask struct for ModelsTBACreationTask
type ModelsTBACreationTask struct {
	AppId *int32 `json:"app_id,omitempty"`
	BlockReason *EnumsTransactionBlockReason `json:"block_reason,omitempty"`
	ChainId *int32 `json:"chain_id,omitempty"`
	ChainType *int32 `json:"chain_type,omitempty"`
	// the collection to add after the tba is created
	CollectionToAdd *string `json:"collection_to_add,omitempty"`
	Contract *string `json:"contract,omitempty"`
	ContractType *int32 `json:"contract_type,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DeletedAt *GormDeletedAt `json:"deleted_at,omitempty"`
	Error *string `json:"error,omitempty"`
	Hash *string `json:"hash,omitempty"`
	Id *int32 `json:"id,omitempty"`
	// tba implementation address
	Implementation *string `json:"implementation,omitempty"`
	// the precomputed tba address
	PrecomputedAddress *string `json:"precomputed_address,omitempty"`
	Salt *string `json:"salt,omitempty"`
	// 0-pending, 1-success, 2-failed
	Status *int32 `json:"status,omitempty"`
	// the nft token contract address
	TokenContract *string `json:"token_contract,omitempty"`
	// the chain id of the token contract
	TokenContractChainId *int32 `json:"token_contract_chain_id,omitempty"`
	// the token id of the nft
	TokenId *string `json:"token_id,omitempty"`
	TxId *int32 `json:"tx_id,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	// the user created the task
	UserId *int32 `json:"user_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsTBACreationTask ModelsTBACreationTask

// NewModelsTBACreationTask instantiates a new ModelsTBACreationTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTBACreationTask() *ModelsTBACreationTask {
	this := ModelsTBACreationTask{}
	return &this
}

// NewModelsTBACreationTaskWithDefaults instantiates a new ModelsTBACreationTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTBACreationTaskWithDefaults() *ModelsTBACreationTask {
	this := ModelsTBACreationTask{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetAppId() int32 {
	if o == nil || IsNil(o.AppId) {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *ModelsTBACreationTask) SetAppId(v int32) {
	o.AppId = &v
}

// GetBlockReason returns the BlockReason field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetBlockReason() EnumsTransactionBlockReason {
	if o == nil || IsNil(o.BlockReason) {
		var ret EnumsTransactionBlockReason
		return ret
	}
	return *o.BlockReason
}

// GetBlockReasonOk returns a tuple with the BlockReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetBlockReasonOk() (*EnumsTransactionBlockReason, bool) {
	if o == nil || IsNil(o.BlockReason) {
		return nil, false
	}
	return o.BlockReason, true
}

// HasBlockReason returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasBlockReason() bool {
	if o != nil && !IsNil(o.BlockReason) {
		return true
	}

	return false
}

// SetBlockReason gets a reference to the given EnumsTransactionBlockReason and assigns it to the BlockReason field.
func (o *ModelsTBACreationTask) SetBlockReason(v EnumsTransactionBlockReason) {
	o.BlockReason = &v
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetChainId() int32 {
	if o == nil || IsNil(o.ChainId) {
		var ret int32
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetChainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given int32 and assigns it to the ChainId field.
func (o *ModelsTBACreationTask) SetChainId(v int32) {
	o.ChainId = &v
}

// GetChainType returns the ChainType field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetChainType() int32 {
	if o == nil || IsNil(o.ChainType) {
		var ret int32
		return ret
	}
	return *o.ChainType
}

// GetChainTypeOk returns a tuple with the ChainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetChainTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.ChainType) {
		return nil, false
	}
	return o.ChainType, true
}

// HasChainType returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasChainType() bool {
	if o != nil && !IsNil(o.ChainType) {
		return true
	}

	return false
}

// SetChainType gets a reference to the given int32 and assigns it to the ChainType field.
func (o *ModelsTBACreationTask) SetChainType(v int32) {
	o.ChainType = &v
}

// GetCollectionToAdd returns the CollectionToAdd field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetCollectionToAdd() string {
	if o == nil || IsNil(o.CollectionToAdd) {
		var ret string
		return ret
	}
	return *o.CollectionToAdd
}

// GetCollectionToAddOk returns a tuple with the CollectionToAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetCollectionToAddOk() (*string, bool) {
	if o == nil || IsNil(o.CollectionToAdd) {
		return nil, false
	}
	return o.CollectionToAdd, true
}

// HasCollectionToAdd returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasCollectionToAdd() bool {
	if o != nil && !IsNil(o.CollectionToAdd) {
		return true
	}

	return false
}

// SetCollectionToAdd gets a reference to the given string and assigns it to the CollectionToAdd field.
func (o *ModelsTBACreationTask) SetCollectionToAdd(v string) {
	o.CollectionToAdd = &v
}

// GetContract returns the Contract field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetContract() string {
	if o == nil || IsNil(o.Contract) {
		var ret string
		return ret
	}
	return *o.Contract
}

// GetContractOk returns a tuple with the Contract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetContractOk() (*string, bool) {
	if o == nil || IsNil(o.Contract) {
		return nil, false
	}
	return o.Contract, true
}

// HasContract returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasContract() bool {
	if o != nil && !IsNil(o.Contract) {
		return true
	}

	return false
}

// SetContract gets a reference to the given string and assigns it to the Contract field.
func (o *ModelsTBACreationTask) SetContract(v string) {
	o.Contract = &v
}

// GetContractType returns the ContractType field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetContractType() int32 {
	if o == nil || IsNil(o.ContractType) {
		var ret int32
		return ret
	}
	return *o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetContractTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractType) {
		return nil, false
	}
	return o.ContractType, true
}

// HasContractType returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasContractType() bool {
	if o != nil && !IsNil(o.ContractType) {
		return true
	}

	return false
}

// SetContractType gets a reference to the given int32 and assigns it to the ContractType field.
func (o *ModelsTBACreationTask) SetContractType(v int32) {
	o.ContractType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsTBACreationTask) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetDeletedAt() GormDeletedAt {
	if o == nil || IsNil(o.DeletedAt) {
		var ret GormDeletedAt
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetDeletedAtOk() (*GormDeletedAt, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given GormDeletedAt and assigns it to the DeletedAt field.
func (o *ModelsTBACreationTask) SetDeletedAt(v GormDeletedAt) {
	o.DeletedAt = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ModelsTBACreationTask) SetError(v string) {
	o.Error = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ModelsTBACreationTask) SetHash(v string) {
	o.Hash = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsTBACreationTask) SetId(v int32) {
	o.Id = &v
}

// GetImplementation returns the Implementation field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetImplementation() string {
	if o == nil || IsNil(o.Implementation) {
		var ret string
		return ret
	}
	return *o.Implementation
}

// GetImplementationOk returns a tuple with the Implementation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetImplementationOk() (*string, bool) {
	if o == nil || IsNil(o.Implementation) {
		return nil, false
	}
	return o.Implementation, true
}

// HasImplementation returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasImplementation() bool {
	if o != nil && !IsNil(o.Implementation) {
		return true
	}

	return false
}

// SetImplementation gets a reference to the given string and assigns it to the Implementation field.
func (o *ModelsTBACreationTask) SetImplementation(v string) {
	o.Implementation = &v
}

// GetPrecomputedAddress returns the PrecomputedAddress field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetPrecomputedAddress() string {
	if o == nil || IsNil(o.PrecomputedAddress) {
		var ret string
		return ret
	}
	return *o.PrecomputedAddress
}

// GetPrecomputedAddressOk returns a tuple with the PrecomputedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetPrecomputedAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PrecomputedAddress) {
		return nil, false
	}
	return o.PrecomputedAddress, true
}

// HasPrecomputedAddress returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasPrecomputedAddress() bool {
	if o != nil && !IsNil(o.PrecomputedAddress) {
		return true
	}

	return false
}

// SetPrecomputedAddress gets a reference to the given string and assigns it to the PrecomputedAddress field.
func (o *ModelsTBACreationTask) SetPrecomputedAddress(v string) {
	o.PrecomputedAddress = &v
}

// GetSalt returns the Salt field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetSalt() string {
	if o == nil || IsNil(o.Salt) {
		var ret string
		return ret
	}
	return *o.Salt
}

// GetSaltOk returns a tuple with the Salt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetSaltOk() (*string, bool) {
	if o == nil || IsNil(o.Salt) {
		return nil, false
	}
	return o.Salt, true
}

// HasSalt returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasSalt() bool {
	if o != nil && !IsNil(o.Salt) {
		return true
	}

	return false
}

// SetSalt gets a reference to the given string and assigns it to the Salt field.
func (o *ModelsTBACreationTask) SetSalt(v string) {
	o.Salt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *ModelsTBACreationTask) SetStatus(v int32) {
	o.Status = &v
}

// GetTokenContract returns the TokenContract field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetTokenContract() string {
	if o == nil || IsNil(o.TokenContract) {
		var ret string
		return ret
	}
	return *o.TokenContract
}

// GetTokenContractOk returns a tuple with the TokenContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetTokenContractOk() (*string, bool) {
	if o == nil || IsNil(o.TokenContract) {
		return nil, false
	}
	return o.TokenContract, true
}

// HasTokenContract returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasTokenContract() bool {
	if o != nil && !IsNil(o.TokenContract) {
		return true
	}

	return false
}

// SetTokenContract gets a reference to the given string and assigns it to the TokenContract field.
func (o *ModelsTBACreationTask) SetTokenContract(v string) {
	o.TokenContract = &v
}

// GetTokenContractChainId returns the TokenContractChainId field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetTokenContractChainId() int32 {
	if o == nil || IsNil(o.TokenContractChainId) {
		var ret int32
		return ret
	}
	return *o.TokenContractChainId
}

// GetTokenContractChainIdOk returns a tuple with the TokenContractChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetTokenContractChainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TokenContractChainId) {
		return nil, false
	}
	return o.TokenContractChainId, true
}

// HasTokenContractChainId returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasTokenContractChainId() bool {
	if o != nil && !IsNil(o.TokenContractChainId) {
		return true
	}

	return false
}

// SetTokenContractChainId gets a reference to the given int32 and assigns it to the TokenContractChainId field.
func (o *ModelsTBACreationTask) SetTokenContractChainId(v int32) {
	o.TokenContractChainId = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetTokenId() string {
	if o == nil || IsNil(o.TokenId) {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetTokenIdOk() (*string, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *ModelsTBACreationTask) SetTokenId(v string) {
	o.TokenId = &v
}

// GetTxId returns the TxId field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetTxId() int32 {
	if o == nil || IsNil(o.TxId) {
		var ret int32
		return ret
	}
	return *o.TxId
}

// GetTxIdOk returns a tuple with the TxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetTxIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TxId) {
		return nil, false
	}
	return o.TxId, true
}

// HasTxId returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasTxId() bool {
	if o != nil && !IsNil(o.TxId) {
		return true
	}

	return false
}

// SetTxId gets a reference to the given int32 and assigns it to the TxId field.
func (o *ModelsTBACreationTask) SetTxId(v int32) {
	o.TxId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsTBACreationTask) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelsTBACreationTask) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTBACreationTask) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelsTBACreationTask) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ModelsTBACreationTask) SetUserId(v int32) {
	o.UserId = &v
}

func (o ModelsTBACreationTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTBACreationTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !IsNil(o.BlockReason) {
		toSerialize["block_reason"] = o.BlockReason
	}
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	if !IsNil(o.ChainType) {
		toSerialize["chain_type"] = o.ChainType
	}
	if !IsNil(o.CollectionToAdd) {
		toSerialize["collection_to_add"] = o.CollectionToAdd
	}
	if !IsNil(o.Contract) {
		toSerialize["contract"] = o.Contract
	}
	if !IsNil(o.ContractType) {
		toSerialize["contract_type"] = o.ContractType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Implementation) {
		toSerialize["implementation"] = o.Implementation
	}
	if !IsNil(o.PrecomputedAddress) {
		toSerialize["precomputed_address"] = o.PrecomputedAddress
	}
	if !IsNil(o.Salt) {
		toSerialize["salt"] = o.Salt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TokenContract) {
		toSerialize["token_contract"] = o.TokenContract
	}
	if !IsNil(o.TokenContractChainId) {
		toSerialize["token_contract_chain_id"] = o.TokenContractChainId
	}
	if !IsNil(o.TokenId) {
		toSerialize["token_id"] = o.TokenId
	}
	if !IsNil(o.TxId) {
		toSerialize["tx_id"] = o.TxId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsTBACreationTask) UnmarshalJSON(data []byte) (err error) {
	varModelsTBACreationTask := _ModelsTBACreationTask{}

	err = json.Unmarshal(data, &varModelsTBACreationTask)

	if err != nil {
		return err
	}

	*o = ModelsTBACreationTask(varModelsTBACreationTask)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "app_id")
		delete(additionalProperties, "block_reason")
		delete(additionalProperties, "chain_id")
		delete(additionalProperties, "chain_type")
		delete(additionalProperties, "collection_to_add")
		delete(additionalProperties, "contract")
		delete(additionalProperties, "contract_type")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "error")
		delete(additionalProperties, "hash")
		delete(additionalProperties, "id")
		delete(additionalProperties, "implementation")
		delete(additionalProperties, "precomputed_address")
		delete(additionalProperties, "salt")
		delete(additionalProperties, "status")
		delete(additionalProperties, "token_contract")
		delete(additionalProperties, "token_contract_chain_id")
		delete(additionalProperties, "token_id")
		delete(additionalProperties, "tx_id")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsTBACreationTask struct {
	value *ModelsTBACreationTask
	isSet bool
}

func (v NullableModelsTBACreationTask) Get() *ModelsTBACreationTask {
	return v.value
}

func (v *NullableModelsTBACreationTask) Set(val *ModelsTBACreationTask) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTBACreationTask) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTBACreationTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTBACreationTask(val *ModelsTBACreationTask) *NullableModelsTBACreationTask {
	return &NullableModelsTBACreationTask{value: val, isSet: true}
}

func (v NullableModelsTBACreationTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTBACreationTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


