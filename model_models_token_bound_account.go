/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// checks if the ModelsTokenBoundAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTokenBoundAccount{}

// ModelsTokenBoundAccount struct for ModelsTokenBoundAccount
type ModelsTokenBoundAccount struct {
	// The address of the tba
	Address *string `json:"address,omitempty"`
	// The chainId of the TBA
	ChainId *int32 `json:"chain_id,omitempty"`
	// no need add to unique index, because conflux core testnet and eth mainnet has different address
	ChainType *int32 `json:"chain_type,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DeletedAt *GormDeletedAt `json:"deleted_at,omitempty"`
	Id *int32 `json:"id,omitempty"`
	// Account logic implementation
	Implementation *string `json:"implementation,omitempty"`
	// Salt parameter that adjusts the tba address
	Salt *string `json:"salt,omitempty"`
	// The address of the nft contract
	TokenContract *string `json:"token_contract,omitempty"`
	// NOTE: this is not the chain id of contract but the erc6551 defined chainid
	TokenContractChainId *int32 `json:"token_contract_chain_id,omitempty"`
	// Token id of the nft
	TokenId *string `json:"token_id,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsTokenBoundAccount ModelsTokenBoundAccount

// NewModelsTokenBoundAccount instantiates a new ModelsTokenBoundAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTokenBoundAccount() *ModelsTokenBoundAccount {
	this := ModelsTokenBoundAccount{}
	return &this
}

// NewModelsTokenBoundAccountWithDefaults instantiates a new ModelsTokenBoundAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTokenBoundAccountWithDefaults() *ModelsTokenBoundAccount {
	this := ModelsTokenBoundAccount{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ModelsTokenBoundAccount) SetAddress(v string) {
	o.Address = &v
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetChainId() int32 {
	if o == nil || IsNil(o.ChainId) {
		var ret int32
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetChainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given int32 and assigns it to the ChainId field.
func (o *ModelsTokenBoundAccount) SetChainId(v int32) {
	o.ChainId = &v
}

// GetChainType returns the ChainType field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetChainType() int32 {
	if o == nil || IsNil(o.ChainType) {
		var ret int32
		return ret
	}
	return *o.ChainType
}

// GetChainTypeOk returns a tuple with the ChainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetChainTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.ChainType) {
		return nil, false
	}
	return o.ChainType, true
}

// HasChainType returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasChainType() bool {
	if o != nil && !IsNil(o.ChainType) {
		return true
	}

	return false
}

// SetChainType gets a reference to the given int32 and assigns it to the ChainType field.
func (o *ModelsTokenBoundAccount) SetChainType(v int32) {
	o.ChainType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsTokenBoundAccount) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetDeletedAt() GormDeletedAt {
	if o == nil || IsNil(o.DeletedAt) {
		var ret GormDeletedAt
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetDeletedAtOk() (*GormDeletedAt, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given GormDeletedAt and assigns it to the DeletedAt field.
func (o *ModelsTokenBoundAccount) SetDeletedAt(v GormDeletedAt) {
	o.DeletedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsTokenBoundAccount) SetId(v int32) {
	o.Id = &v
}

// GetImplementation returns the Implementation field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetImplementation() string {
	if o == nil || IsNil(o.Implementation) {
		var ret string
		return ret
	}
	return *o.Implementation
}

// GetImplementationOk returns a tuple with the Implementation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetImplementationOk() (*string, bool) {
	if o == nil || IsNil(o.Implementation) {
		return nil, false
	}
	return o.Implementation, true
}

// HasImplementation returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasImplementation() bool {
	if o != nil && !IsNil(o.Implementation) {
		return true
	}

	return false
}

// SetImplementation gets a reference to the given string and assigns it to the Implementation field.
func (o *ModelsTokenBoundAccount) SetImplementation(v string) {
	o.Implementation = &v
}

// GetSalt returns the Salt field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetSalt() string {
	if o == nil || IsNil(o.Salt) {
		var ret string
		return ret
	}
	return *o.Salt
}

// GetSaltOk returns a tuple with the Salt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetSaltOk() (*string, bool) {
	if o == nil || IsNil(o.Salt) {
		return nil, false
	}
	return o.Salt, true
}

// HasSalt returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasSalt() bool {
	if o != nil && !IsNil(o.Salt) {
		return true
	}

	return false
}

// SetSalt gets a reference to the given string and assigns it to the Salt field.
func (o *ModelsTokenBoundAccount) SetSalt(v string) {
	o.Salt = &v
}

// GetTokenContract returns the TokenContract field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetTokenContract() string {
	if o == nil || IsNil(o.TokenContract) {
		var ret string
		return ret
	}
	return *o.TokenContract
}

// GetTokenContractOk returns a tuple with the TokenContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetTokenContractOk() (*string, bool) {
	if o == nil || IsNil(o.TokenContract) {
		return nil, false
	}
	return o.TokenContract, true
}

// HasTokenContract returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasTokenContract() bool {
	if o != nil && !IsNil(o.TokenContract) {
		return true
	}

	return false
}

// SetTokenContract gets a reference to the given string and assigns it to the TokenContract field.
func (o *ModelsTokenBoundAccount) SetTokenContract(v string) {
	o.TokenContract = &v
}

// GetTokenContractChainId returns the TokenContractChainId field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetTokenContractChainId() int32 {
	if o == nil || IsNil(o.TokenContractChainId) {
		var ret int32
		return ret
	}
	return *o.TokenContractChainId
}

// GetTokenContractChainIdOk returns a tuple with the TokenContractChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetTokenContractChainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TokenContractChainId) {
		return nil, false
	}
	return o.TokenContractChainId, true
}

// HasTokenContractChainId returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasTokenContractChainId() bool {
	if o != nil && !IsNil(o.TokenContractChainId) {
		return true
	}

	return false
}

// SetTokenContractChainId gets a reference to the given int32 and assigns it to the TokenContractChainId field.
func (o *ModelsTokenBoundAccount) SetTokenContractChainId(v int32) {
	o.TokenContractChainId = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetTokenId() string {
	if o == nil || IsNil(o.TokenId) {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetTokenIdOk() (*string, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *ModelsTokenBoundAccount) SetTokenId(v string) {
	o.TokenId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccount) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccount) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccount) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsTokenBoundAccount) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsTokenBoundAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTokenBoundAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	if !IsNil(o.ChainType) {
		toSerialize["chain_type"] = o.ChainType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Implementation) {
		toSerialize["implementation"] = o.Implementation
	}
	if !IsNil(o.Salt) {
		toSerialize["salt"] = o.Salt
	}
	if !IsNil(o.TokenContract) {
		toSerialize["token_contract"] = o.TokenContract
	}
	if !IsNil(o.TokenContractChainId) {
		toSerialize["token_contract_chain_id"] = o.TokenContractChainId
	}
	if !IsNil(o.TokenId) {
		toSerialize["token_id"] = o.TokenId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsTokenBoundAccount) UnmarshalJSON(data []byte) (err error) {
	varModelsTokenBoundAccount := _ModelsTokenBoundAccount{}

	err = json.Unmarshal(data, &varModelsTokenBoundAccount)

	if err != nil {
		return err
	}

	*o = ModelsTokenBoundAccount(varModelsTokenBoundAccount)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "chain_id")
		delete(additionalProperties, "chain_type")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "id")
		delete(additionalProperties, "implementation")
		delete(additionalProperties, "salt")
		delete(additionalProperties, "token_contract")
		delete(additionalProperties, "token_contract_chain_id")
		delete(additionalProperties, "token_id")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsTokenBoundAccount struct {
	value *ModelsTokenBoundAccount
	isSet bool
}

func (v NullableModelsTokenBoundAccount) Get() *ModelsTokenBoundAccount {
	return v.value
}

func (v *NullableModelsTokenBoundAccount) Set(val *ModelsTokenBoundAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTokenBoundAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTokenBoundAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTokenBoundAccount(val *ModelsTokenBoundAccount) *NullableModelsTokenBoundAccount {
	return &NullableModelsTokenBoundAccount{value: val, isSet: true}
}

func (v NullableModelsTokenBoundAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTokenBoundAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


