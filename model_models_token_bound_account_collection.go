/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// checks if the ModelsTokenBoundAccountCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTokenBoundAccountCollection{}

// ModelsTokenBoundAccountCollection struct for ModelsTokenBoundAccountCollection
type ModelsTokenBoundAccountCollection struct {
	// The chain id of the tba collection. All tbas in the collection are of same chain id.
	ChainId *int32 `json:"chain_id,omitempty"`
	// the type of the chain. 1-CFX, 2-ETH. All tbas in the collection are of same chain type
	ChainType *int32 `json:"chain_type,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DeletedAt *GormDeletedAt `json:"deleted_at,omitempty"`
	// Collection description
	Description *string `json:"description,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Items []ModelsTokenBoundAccount `json:"items,omitempty"`
	// The name of tba collection. The name is unique for the user.
	Name *string `json:"name,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	// The user created the collection
	UserId *int32 `json:"userId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsTokenBoundAccountCollection ModelsTokenBoundAccountCollection

// NewModelsTokenBoundAccountCollection instantiates a new ModelsTokenBoundAccountCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTokenBoundAccountCollection() *ModelsTokenBoundAccountCollection {
	this := ModelsTokenBoundAccountCollection{}
	return &this
}

// NewModelsTokenBoundAccountCollectionWithDefaults instantiates a new ModelsTokenBoundAccountCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTokenBoundAccountCollectionWithDefaults() *ModelsTokenBoundAccountCollection {
	this := ModelsTokenBoundAccountCollection{}
	return &this
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetChainId() int32 {
	if o == nil || IsNil(o.ChainId) {
		var ret int32
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetChainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given int32 and assigns it to the ChainId field.
func (o *ModelsTokenBoundAccountCollection) SetChainId(v int32) {
	o.ChainId = &v
}

// GetChainType returns the ChainType field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetChainType() int32 {
	if o == nil || IsNil(o.ChainType) {
		var ret int32
		return ret
	}
	return *o.ChainType
}

// GetChainTypeOk returns a tuple with the ChainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetChainTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.ChainType) {
		return nil, false
	}
	return o.ChainType, true
}

// HasChainType returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasChainType() bool {
	if o != nil && !IsNil(o.ChainType) {
		return true
	}

	return false
}

// SetChainType gets a reference to the given int32 and assigns it to the ChainType field.
func (o *ModelsTokenBoundAccountCollection) SetChainType(v int32) {
	o.ChainType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsTokenBoundAccountCollection) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetDeletedAt() GormDeletedAt {
	if o == nil || IsNil(o.DeletedAt) {
		var ret GormDeletedAt
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetDeletedAtOk() (*GormDeletedAt, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given GormDeletedAt and assigns it to the DeletedAt field.
func (o *ModelsTokenBoundAccountCollection) SetDeletedAt(v GormDeletedAt) {
	o.DeletedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsTokenBoundAccountCollection) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsTokenBoundAccountCollection) SetId(v int32) {
	o.Id = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetItems() []ModelsTokenBoundAccount {
	if o == nil || IsNil(o.Items) {
		var ret []ModelsTokenBoundAccount
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetItemsOk() ([]ModelsTokenBoundAccount, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ModelsTokenBoundAccount and assigns it to the Items field.
func (o *ModelsTokenBoundAccountCollection) SetItems(v []ModelsTokenBoundAccount) {
	o.Items = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsTokenBoundAccountCollection) SetName(v string) {
	o.Name = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsTokenBoundAccountCollection) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelsTokenBoundAccountCollection) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTokenBoundAccountCollection) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelsTokenBoundAccountCollection) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ModelsTokenBoundAccountCollection) SetUserId(v int32) {
	o.UserId = &v
}

func (o ModelsTokenBoundAccountCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTokenBoundAccountCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	if !IsNil(o.ChainType) {
		toSerialize["chain_type"] = o.ChainType
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsTokenBoundAccountCollection) UnmarshalJSON(data []byte) (err error) {
	varModelsTokenBoundAccountCollection := _ModelsTokenBoundAccountCollection{}

	err = json.Unmarshal(data, &varModelsTokenBoundAccountCollection)

	if err != nil {
		return err
	}

	*o = ModelsTokenBoundAccountCollection(varModelsTokenBoundAccountCollection)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "chain_id")
		delete(additionalProperties, "chain_type")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "description")
		delete(additionalProperties, "id")
		delete(additionalProperties, "items")
		delete(additionalProperties, "name")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "userId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsTokenBoundAccountCollection struct {
	value *ModelsTokenBoundAccountCollection
	isSet bool
}

func (v NullableModelsTokenBoundAccountCollection) Get() *ModelsTokenBoundAccountCollection {
	return v.value
}

func (v *NullableModelsTokenBoundAccountCollection) Set(val *ModelsTokenBoundAccountCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTokenBoundAccountCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTokenBoundAccountCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTokenBoundAccountCollection(val *ModelsTokenBoundAccountCollection) *NullableModelsTokenBoundAccountCollection {
	return &NullableModelsTokenBoundAccountCollection{value: val, isSet: true}
}

func (v NullableModelsTokenBoundAccountCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTokenBoundAccountCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


