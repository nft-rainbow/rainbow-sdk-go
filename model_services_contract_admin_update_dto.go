/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// checks if the ServicesContractAdminUpdateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesContractAdminUpdateDto{}

// ServicesContractAdminUpdateDto struct for ServicesContractAdminUpdateDto
type ServicesContractAdminUpdateDto struct {
	// Chain           string `form:\"chain\" json:\"chain\" binding:\"required,oneof=conflux conflux_test\"` ContractAddress string `form:\"contract_address\" json:\"contract_address\" binding:\"required\"`
	AdminAddress string `json:"admin_address"`
	AdditionalProperties map[string]interface{}
}

type _ServicesContractAdminUpdateDto ServicesContractAdminUpdateDto

// NewServicesContractAdminUpdateDto instantiates a new ServicesContractAdminUpdateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesContractAdminUpdateDto(adminAddress string) *ServicesContractAdminUpdateDto {
	this := ServicesContractAdminUpdateDto{}
	this.AdminAddress = adminAddress
	return &this
}

// NewServicesContractAdminUpdateDtoWithDefaults instantiates a new ServicesContractAdminUpdateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesContractAdminUpdateDtoWithDefaults() *ServicesContractAdminUpdateDto {
	this := ServicesContractAdminUpdateDto{}
	return &this
}

// GetAdminAddress returns the AdminAddress field value
func (o *ServicesContractAdminUpdateDto) GetAdminAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdminAddress
}

// GetAdminAddressOk returns a tuple with the AdminAddress field value
// and a boolean to check if the value has been set.
func (o *ServicesContractAdminUpdateDto) GetAdminAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminAddress, true
}

// SetAdminAddress sets field value
func (o *ServicesContractAdminUpdateDto) SetAdminAddress(v string) {
	o.AdminAddress = v
}

func (o ServicesContractAdminUpdateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesContractAdminUpdateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["admin_address"] = o.AdminAddress

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServicesContractAdminUpdateDto) UnmarshalJSON(bytes []byte) (err error) {
	varServicesContractAdminUpdateDto := _ServicesContractAdminUpdateDto{}

	if err = json.Unmarshal(bytes, &varServicesContractAdminUpdateDto); err == nil {
		*o = ServicesContractAdminUpdateDto(varServicesContractAdminUpdateDto)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "admin_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServicesContractAdminUpdateDto struct {
	value *ServicesContractAdminUpdateDto
	isSet bool
}

func (v NullableServicesContractAdminUpdateDto) Get() *ServicesContractAdminUpdateDto {
	return v.value
}

func (v *NullableServicesContractAdminUpdateDto) Set(val *ServicesContractAdminUpdateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesContractAdminUpdateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesContractAdminUpdateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesContractAdminUpdateDto(val *ServicesContractAdminUpdateDto) *NullableServicesContractAdminUpdateDto {
	return &NullableServicesContractAdminUpdateDto{value: val, isSet: true}
}

func (v NullableServicesContractAdminUpdateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesContractAdminUpdateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


