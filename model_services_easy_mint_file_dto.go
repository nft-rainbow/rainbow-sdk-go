/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
)

// ServicesEasyMintFileDto struct for ServicesEasyMintFileDto
type ServicesEasyMintFileDto struct {
	Chain string `json:"chain"`
	Description string `json:"description"`
	File MultipartFileHeader `json:"file"`
	MintToAddress string `json:"mint_to_address"`
	Name string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _ServicesEasyMintFileDto ServicesEasyMintFileDto

// NewServicesEasyMintFileDto instantiates a new ServicesEasyMintFileDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesEasyMintFileDto(chain string, description string, file MultipartFileHeader, mintToAddress string, name string) *ServicesEasyMintFileDto {
	this := ServicesEasyMintFileDto{}
	this.Chain = chain
	this.Description = description
	this.File = file
	this.MintToAddress = mintToAddress
	this.Name = name
	return &this
}

// NewServicesEasyMintFileDtoWithDefaults instantiates a new ServicesEasyMintFileDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesEasyMintFileDtoWithDefaults() *ServicesEasyMintFileDto {
	this := ServicesEasyMintFileDto{}
	return &this
}

// GetChain returns the Chain field value
func (o *ServicesEasyMintFileDto) GetChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintFileDto) GetChainOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *ServicesEasyMintFileDto) SetChain(v string) {
	o.Chain = v
}

// GetDescription returns the Description field value
func (o *ServicesEasyMintFileDto) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintFileDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ServicesEasyMintFileDto) SetDescription(v string) {
	o.Description = v
}

// GetFile returns the File field value
func (o *ServicesEasyMintFileDto) GetFile() MultipartFileHeader {
	if o == nil {
		var ret MultipartFileHeader
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintFileDto) GetFileOk() (*MultipartFileHeader, bool) {
	if o == nil {
    return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *ServicesEasyMintFileDto) SetFile(v MultipartFileHeader) {
	o.File = v
}

// GetMintToAddress returns the MintToAddress field value
func (o *ServicesEasyMintFileDto) GetMintToAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MintToAddress
}

// GetMintToAddressOk returns a tuple with the MintToAddress field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintFileDto) GetMintToAddressOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MintToAddress, true
}

// SetMintToAddress sets field value
func (o *ServicesEasyMintFileDto) SetMintToAddress(v string) {
	o.MintToAddress = v
}

// GetName returns the Name field value
func (o *ServicesEasyMintFileDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintFileDto) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServicesEasyMintFileDto) SetName(v string) {
	o.Name = v
}

func (o ServicesEasyMintFileDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["chain"] = o.Chain
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["file"] = o.File
	}
	if true {
		toSerialize["mint_to_address"] = o.MintToAddress
	}
	if true {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ServicesEasyMintFileDto) UnmarshalJSON(bytes []byte) (err error) {
	varServicesEasyMintFileDto := _ServicesEasyMintFileDto{}

	if err = json.Unmarshal(bytes, &varServicesEasyMintFileDto); err == nil {
		*o = ServicesEasyMintFileDto(varServicesEasyMintFileDto)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "chain")
		delete(additionalProperties, "description")
		delete(additionalProperties, "file")
		delete(additionalProperties, "mint_to_address")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServicesEasyMintFileDto struct {
	value *ServicesEasyMintFileDto
	isSet bool
}

func (v NullableServicesEasyMintFileDto) Get() *ServicesEasyMintFileDto {
	return v.value
}

func (v *NullableServicesEasyMintFileDto) Set(val *ServicesEasyMintFileDto) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesEasyMintFileDto) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesEasyMintFileDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesEasyMintFileDto(val *ServicesEasyMintFileDto) *NullableServicesEasyMintFileDto {
	return &NullableServicesEasyMintFileDto{value: val, isSet: true}
}

func (v NullableServicesEasyMintFileDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesEasyMintFileDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


