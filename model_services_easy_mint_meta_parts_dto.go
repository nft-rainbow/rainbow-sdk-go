/*
Rainbow-API

The responses of the open api in swagger focus on the data field rather than the code and the message fields

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rainbowsdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ServicesEasyMintMetaPartsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicesEasyMintMetaPartsDto{}

// ServicesEasyMintMetaPartsDto struct for ServicesEasyMintMetaPartsDto
type ServicesEasyMintMetaPartsDto struct {
	AnimationUrl *string `json:"animation_url,omitempty"`
	Attributes []ModelsExposedMetadataAttribute `json:"attributes,omitempty"`
	Chain string `json:"chain"`
	Description *string `json:"description,omitempty"`
	FileUrl string `json:"file_url"`
	MintToAddress string `json:"mint_to_address"`
	Name string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _ServicesEasyMintMetaPartsDto ServicesEasyMintMetaPartsDto

// NewServicesEasyMintMetaPartsDto instantiates a new ServicesEasyMintMetaPartsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicesEasyMintMetaPartsDto(chain string, fileUrl string, mintToAddress string, name string) *ServicesEasyMintMetaPartsDto {
	this := ServicesEasyMintMetaPartsDto{}
	this.Chain = chain
	this.FileUrl = fileUrl
	this.MintToAddress = mintToAddress
	this.Name = name
	return &this
}

// NewServicesEasyMintMetaPartsDtoWithDefaults instantiates a new ServicesEasyMintMetaPartsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicesEasyMintMetaPartsDtoWithDefaults() *ServicesEasyMintMetaPartsDto {
	this := ServicesEasyMintMetaPartsDto{}
	return &this
}

// GetAnimationUrl returns the AnimationUrl field value if set, zero value otherwise.
func (o *ServicesEasyMintMetaPartsDto) GetAnimationUrl() string {
	if o == nil || IsNil(o.AnimationUrl) {
		var ret string
		return ret
	}
	return *o.AnimationUrl
}

// GetAnimationUrlOk returns a tuple with the AnimationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintMetaPartsDto) GetAnimationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AnimationUrl) {
		return nil, false
	}
	return o.AnimationUrl, true
}

// HasAnimationUrl returns a boolean if a field has been set.
func (o *ServicesEasyMintMetaPartsDto) HasAnimationUrl() bool {
	if o != nil && !IsNil(o.AnimationUrl) {
		return true
	}

	return false
}

// SetAnimationUrl gets a reference to the given string and assigns it to the AnimationUrl field.
func (o *ServicesEasyMintMetaPartsDto) SetAnimationUrl(v string) {
	o.AnimationUrl = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ServicesEasyMintMetaPartsDto) GetAttributes() []ModelsExposedMetadataAttribute {
	if o == nil || IsNil(o.Attributes) {
		var ret []ModelsExposedMetadataAttribute
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintMetaPartsDto) GetAttributesOk() ([]ModelsExposedMetadataAttribute, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ServicesEasyMintMetaPartsDto) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []ModelsExposedMetadataAttribute and assigns it to the Attributes field.
func (o *ServicesEasyMintMetaPartsDto) SetAttributes(v []ModelsExposedMetadataAttribute) {
	o.Attributes = v
}

// GetChain returns the Chain field value
func (o *ServicesEasyMintMetaPartsDto) GetChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintMetaPartsDto) GetChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *ServicesEasyMintMetaPartsDto) SetChain(v string) {
	o.Chain = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServicesEasyMintMetaPartsDto) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintMetaPartsDto) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServicesEasyMintMetaPartsDto) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServicesEasyMintMetaPartsDto) SetDescription(v string) {
	o.Description = &v
}

// GetFileUrl returns the FileUrl field value
func (o *ServicesEasyMintMetaPartsDto) GetFileUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileUrl
}

// GetFileUrlOk returns a tuple with the FileUrl field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintMetaPartsDto) GetFileUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileUrl, true
}

// SetFileUrl sets field value
func (o *ServicesEasyMintMetaPartsDto) SetFileUrl(v string) {
	o.FileUrl = v
}

// GetMintToAddress returns the MintToAddress field value
func (o *ServicesEasyMintMetaPartsDto) GetMintToAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MintToAddress
}

// GetMintToAddressOk returns a tuple with the MintToAddress field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintMetaPartsDto) GetMintToAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MintToAddress, true
}

// SetMintToAddress sets field value
func (o *ServicesEasyMintMetaPartsDto) SetMintToAddress(v string) {
	o.MintToAddress = v
}

// GetName returns the Name field value
func (o *ServicesEasyMintMetaPartsDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServicesEasyMintMetaPartsDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServicesEasyMintMetaPartsDto) SetName(v string) {
	o.Name = v
}

func (o ServicesEasyMintMetaPartsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicesEasyMintMetaPartsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnimationUrl) {
		toSerialize["animation_url"] = o.AnimationUrl
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	toSerialize["chain"] = o.Chain
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["file_url"] = o.FileUrl
	toSerialize["mint_to_address"] = o.MintToAddress
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServicesEasyMintMetaPartsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chain",
		"file_url",
		"mint_to_address",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServicesEasyMintMetaPartsDto := _ServicesEasyMintMetaPartsDto{}

	err = json.Unmarshal(data, &varServicesEasyMintMetaPartsDto)

	if err != nil {
		return err
	}

	*o = ServicesEasyMintMetaPartsDto(varServicesEasyMintMetaPartsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "animation_url")
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "chain")
		delete(additionalProperties, "description")
		delete(additionalProperties, "file_url")
		delete(additionalProperties, "mint_to_address")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServicesEasyMintMetaPartsDto struct {
	value *ServicesEasyMintMetaPartsDto
	isSet bool
}

func (v NullableServicesEasyMintMetaPartsDto) Get() *ServicesEasyMintMetaPartsDto {
	return v.value
}

func (v *NullableServicesEasyMintMetaPartsDto) Set(val *ServicesEasyMintMetaPartsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableServicesEasyMintMetaPartsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableServicesEasyMintMetaPartsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicesEasyMintMetaPartsDto(val *ServicesEasyMintMetaPartsDto) *NullableServicesEasyMintMetaPartsDto {
	return &NullableServicesEasyMintMetaPartsDto{value: val, isSet: true}
}

func (v NullableServicesEasyMintMetaPartsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicesEasyMintMetaPartsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


